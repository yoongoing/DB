import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class Addmenu extends JFrame {

	JLabel labelMenuName = new JLabel("메뉴명");
	JLabel labelMenuPrice = new JLabel("가격");

	JTextField tFieldMenuName = new JTextField();
	JTextField tFieldMenuPrice = new JTextField();

	JButton buttonAddMenu = new JButton("등록");
	JButton buttonCancel = new JButton("취소");

	private Connection db;
	private MenuView menuview;
	
	private ArrayList<String> menulist;

	public Addmenu(Connection db) {

		this.db = db;
		this.setLayout(null);
		labelMenuName.setBounds(20, 20, 100, 30);
		labelMenuPrice.setBounds(20, 70, 100, 30);
		tFieldMenuName.setBounds(130, 20, 100, 30);
		tFieldMenuPrice.setBounds(130, 70, 100, 30);
		buttonAddMenu.setBounds(20, 120, 100, 30);
		buttonCancel.setBounds(130, 120, 100, 30);
		buttonAddMenu.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				AddMenuDB();
				dispose();

			}
		});
		buttonCancel.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				dispose();

			}
		});
		this.add(labelMenuName);
		this.add(labelMenuPrice);
		this.add(tFieldMenuName);
		this.add(tFieldMenuPrice);
		this.add(buttonAddMenu);
		this.add(buttonCancel);

		this.setTitle("메뉴등록");
		this.setBounds(150, 150, 270, 200);
		this.setVisible(true);
	}

	
	
	public ArrayList<String> getMenuName() {
        menulist = new ArrayList<>();
        try {
            String sql = "select name from menu";
            PreparedStatement stmt = db.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            while(rs.next()) {
                menulist.add(rs.getString("name"));
            }
        }
        catch (Exception e) {
            System.out.println(e);
        }
        return menulist;
    }
	
	private int getMenuCount() {
		int n = 0;
		try {
			String sql = "SELECT Count(id) FROM menu";
			PreparedStatement stmt = db.prepareStatement(sql);
			ResultSet rs = stmt.executeQuery();
			rs.next();
			n = Integer.parseInt(rs.getString("count(id)"));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return n;
	}

	public void AddMenuDB() {

		String name = tFieldMenuName.getText();
		String price = tFieldMenuPrice.getText();
		if (getMenuCount() < 20) {
			if (!getMenuName().contains(name)) {
				try {
					int id = 1000 + getMenuCount();
					String sql = "insert into menu values (" + "'" + name + "', " + "" + id + ", " + "" + price + ")";

					PreparedStatement stmt = db.prepareStatement(sql);
					stmt.executeUpdate();
					stmt.close();
					JOptionPane.showMessageDialog(null, "등록되었습니다.");
					updateMenu();
				} catch (Exception e) {
					e.printStackTrace();
				}
			} else {
				JOptionPane.showMessageDialog(null, "동일한 메뉴가 존재합니다.");

			}
		} else {
			JOptionPane.showMessageDialog(null, "메뉴의 개수는 최대 20개입니다.");
		}
	}
	
	  public void updateMenu() {
	        menulist = getMenuName();
	        for (int i = 0; i < menulist.size(); i++) {
	            menuview.menus[i].setText(menulist.get(i));
	     
	        }
	        for (int i = menulist.size(); i < 20; i++) {
	            menuview.menus[i].setText("");
	    
	        }
	    }

	public void setMenuView(MenuView menuview) {
		this.menuview = menuview;
	}
}
